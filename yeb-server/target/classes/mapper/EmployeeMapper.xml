<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.server.mapper.EmployeeMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.example.server.pojo.Employee">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="gender" property="gender"/>
        <result column="birthday" property="birthday"/>
        <result column="idCard" property="idCard"/>
        <result column="wedlock" property="wedlock"/>
        <result column="nationId" property="nationId"/>
        <result column="nativePlace" property="nativePlace"/>
        <result column="politicId" property="politicId"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="address" property="address"/>
        <result column="departmentId" property="departmentId"/>
        <result column="jobLevelId" property="jobLevelId"/>
        <result column="posId" property="posId"/>
        <result column="engageForm" property="engageForm"/>
        <result column="tiptopDegree" property="tiptopDegree"/>
        <result column="specialty" property="specialty"/>
        <result column="school" property="school"/>
        <result column="beginDate" property="beginDate"/>
        <result column="workState" property="workState"/>
        <result column="workID" property="workID"/>
        <result column="contractTerm" property="contractTerm"/>
        <result column="conversionTime" property="conversionTime"/>
        <result column="notWorkDate" property="notWorkDate"/>
        <result column="beginContract" property="beginContract"/>
        <result column="endContract" property="endContract"/>
        <result column="workAge" property="workAge"/>
        <result column="salaryId" property="salaryId"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, name, gender, birthday, idCard, wedlock, nationId, nativePlace, politicId, email, phone, address, departmentId, jobLevelId, posId, engageForm, tiptopDegree, specialty, school, beginDate, workState, workID, contractTerm, conversionTime, notWorkDate, beginContract, endContract, workAge, salaryId
    </sql>
    <resultMap id="EmployeeInfo" type="com.example.server.pojo.Employee" extends="BaseResultMap">
        <association property="nation" javaType="com.example.server.pojo.Nation">
            <id column="nid" property="id"/>
            <result column="nname" property="name"/>
        </association>
        <association property="politicsStatus" javaType="com.example.server.pojo.PoliticsStatus">
            <id column="pid" property="id"/>
            <result column="pname" property="name"/>
        </association>
        <association property="department" javaType="com.example.server.pojo.Department">
            <id column="did" property="id"/>
            <result column="dname" property="name"/>
        </association>
        <association property="joblevel" javaType="com.example.server.pojo.Joblevel">
            <id column="jid" property="id"/>
            <result column="jname" property="name"/>
        </association>
        <association property="position" javaType="com.example.server.pojo.Position">
            <id column="posid" property="id"/>
            <result column="posname" property="name"/>
        </association>

    </resultMap>

    <!--获取所有员工-->
    <select id="getEmployeeByPage" resultMap="EmployeeInfo">
        select e.*,
        n.id as nid,
        n.name as nname,
        p.id as pid,
        p.name as pname,
        d.id as did,
        d.name as dname,
        j.id as jid,
        j.name as jname,
        pos.id as posid,
        pos.name as posname
        from t_employee e,
        t_nation n,
        t_politics_status p,
        t_department d,
        t_joblevel j,
        t_position pos
        where e.nationId = n.id
        and e.politicId = p.id
        and e.departmentId = d.id
        and e.jobLevelId = j.id
        and e.posId = pos.id
        <!--下面的参数都是可有可无的，所以使用动态SQL配置-->
        <if test="null!=employee.name and '' != employee.name">
            and e.name like concat('%', #{employee.name}, '%')
        </if>
        <if test="null != employee.politicId">
            and e.politicId =#{employee.politicId}
        </if>
        <if test="null != employee.nationId">
            and e.nationId =#{employee.nationId}
        </if>
        <if test="null != employee.jobLevelId">
            and e.jobLevelId =#{employee.jobLevelId}
        </if>
        <if test="null != employee.posId">
            and e.posId =#{employee.posId}
        </if>
        <if test="null != employee.engageForm and '' !=employee.engageForm">
            and e.engageForm =#{employee.engageForm}
        </if>
        <if test="null != employee.departmentId">
            and e.departmentId =#{employee.departmentId}
        </if>
        <!--因为beginDateScope是通过前端传入的，所以入职时间这里不需要添加employee前缀-->
        <if test="null != beginDateScope and 2==beginDateScope.length">
            and e.beginDate between #{beginDateScope[0]} and #{beginDateScope[1]}
        </if>

        order by e.id
    </select>

    <!--查询员工-->
    <select id="getEmployee" resultMap="EmployeeInfo">
        select e.*,
        n.id as nid,
        n.name as nname,
        p.id as pid,
        p.name as pname,
        d.id as did,
        d.name as dname,
        j.id as jid,
        j.name as jname,
        pos.id as posid,
        pos.name as posname
        from t_employee e,
        t_nation n,
        t_politics_status p,
        t_department d,
        t_joblevel j,
        t_position pos
        where e.nationId = n.id
        and e.politicId = p.id
        and e.departmentId = d.id
        and e.jobLevelId = j.id
        and e.posId = pos.id

        <if test="null !=id">
            and e.id = #{id}
        </if>

        order by e.id
    </select>


    <resultMap id="EmployeeWithSalary" type="com.example.server.pojo.Employee" extends="BaseResultMap">
        <association property="salary" javaType="com.example.server.pojo.Salary">
            <id column="sid" property="id"/>
            <result column="sname" property="name"/>
            <result column="sbasicSalary" property="basicSalary"/>
            <result column="sbonus" property="bonus"/>
            <result column="slunchSalary" property="lunchSalary"/>
            <result column="strafficSalary" property="trafficSalary"/>
            <result column="sallSalary" property="allSalary"/>
            <result column="spensionBase" property="pensionBase"/>
            <result column="sPensionPer" property="pensionPer"/>
            <result column="smedicalBase" property="medicalBase"/>
            <result column="smedicalPer" property="medicalPer"/>
            <result column="saccumulationFunBase" property="accumulationFunBase"/>
            <result column="saccumulationFunPer" property="accumulationFunPer"/>
        </association>
        <association property="department" javaType="com.example.server.pojo.Department">
            <result column="dname" property="name"/>
        </association>
    </resultMap>
    <!--获取所有员工的工资账套-->
    <select id="getEmployeeWithSalary" resultMap="EmployeeWithSalary">
        select e.*,
               d.name                 as dname,
               s.id                   as sid,
               s.name                 as sname,
               s.basicSalary          as sbasicSalary,
               s.bonus                as sbonus,
               s.lunchSalary          as slunchSalary,
               s.trafficSalary        as strafficSalary,
               s.allSalary            as sallSalary,
               s.pensionBase          as spensionBase,
               s.pensionPer           as spensionPer,
               s.medicalBase          as smedicalBase,
               s.medicalPer           as smedicalPer,
               s.accumulationFundBase as saccumulationFundBase,
               s.accumulationFundPer  as saccumulationFundPer


        from t_employee e
                 left join t_salary s on e.salaryId = s.id
                 left join t_department d on e.departmentId = d.id
        order by e.id
    </select>
</mapper>
